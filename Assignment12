public class Main {

    public static int fibonacciRecursion(int n) {
        if (n == 0) {
            return 0;
        } else if (n == 1) {
            return 1;
        } else {
            return fibonacciRecursion(n - 1) + fibonacciRecursion(n - 2);
        }
    }


    public static int fibonacciIteration(int n) {
        int a = 0;
        int b = 1;
        for (int i = 0; i < n; i++) {
            int temp = a;
            a = b;
            b = temp + b;
        }
        return a;
    }


    public static int decimalToBinaryRecursion(int d) {
        if (d == 0)
            return 0;
        else
            return (d % 2 + 10 * decimalToBinaryRecursion(d / 2));
    }


    public static String decimalToBinaryIteration(int d) {
        String binary = "";
        if (d == 0)
            return "0";
        while (d > 0) {
            int remainder = d % 2;
            binary = remainder + binary;
            d = d / 2;
        }
        return binary;
    }


    public static void main(String[] args) {
        int n = 10;
        System.out.println("Fibonacci sequence using recursion:" + fibonacciRecursion(n));
        System.out.println("Fibonacci sequence using loop:" + fibonacciIteration(n));

        int d = 255;
        System.out.println("Decimal to binary using recursion:" + decimalToBinaryRecursion(d));
        System.out.println("Decimal to binary using loop:" + decimalToBinaryIteration(d));
    }
}
